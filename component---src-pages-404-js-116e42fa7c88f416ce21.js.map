{"version":3,"sources":["webpack:///./src/components/Arrow/Arrow.js","webpack:///./src/pages/404.js","webpack:///./src/utils/getPartTranslationPath.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["Arrow","render","className","wrapperClassName","link","content","stack","bold","thickBorder","upperCase","props","arrowContent","map","arrow","i","arrowStyle","backgroundColor","color","colors","key","style","to","text","toUpperCase","display","flexDirection","path","flex","defaultProps","NotFoundPage","state","siteLanguage","componentDidMount","window","location","pathname","indexOf","this","setState","title","lang","getTranslationPath","Component","getPartTranslationPath","language","part","createHTML","url"],"mappings":"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","file":"component---src-pages-404-js-116e42fa7c88f416ce21.js","sourcesContent":["import './Arrow.scss';\n\nimport Element from '../Element/Element';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from '../../colors';\n\nconst Arrow = ({\n  className,\n  wrapperClassName,\n  link,\n  content,\n  stack,\n  bold,\n  thickBorder,\n  upperCase,\n  ...props\n}) => {\n  const arrowContent = (\n    <div className={`arrow__container arrows--horizontal ${className}`}>\n      {content.map((arrow, i) => {\n        const arrowStyle = {\n          backgroundColor: arrow.backgroundColor\n            ? arrow.backgroundColor\n            : 'transparent',\n          color:\n            arrow.backgroundColor === colors['black']\n              ? 'white'\n              : colors['black'],\n        };\n\n        return (\n          <div key={`arrow${i}`} className=\"arrow__wrapper\" {...props}>\n            <div\n              className={`arrow__rectangle ${bold ? 'bold' : ''} ${\n                thickBorder ? 'arrow__rectangle--thick-border' : ''\n              }`}\n              style={arrowStyle}\n            >\n              {arrow.link ? (\n                <Link to={arrow.link}>\n                  {upperCase ? arrow.text.toUpperCase() : arrow.text}\n                </Link>\n              ) : upperCase ? (\n                arrow.text.toUpperCase()\n              ) : (\n                arrow.text\n              )}\n            </div>\n            <div\n              className={`arrow__point ${\n                thickBorder ? 'arrow__point--thick-border' : ''\n              }`}\n              style={arrowStyle}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  let render;\n\n  if (!stack && !link) {\n    render = <div className=\"col-10 spacing--after\">{arrowContent}</div>;\n  } else if (!stack && link) {\n    render = (\n      <div className=\"spacing--after-small auto-bottom-margin\">\n        <Link to={link} style={{ display: 'inline-block' }}>\n          {arrowContent}\n        </Link>\n      </div>\n    );\n  } else if (stack) {\n    render = (\n      <div className={`col-10 spacing--after ${wrapperClassName}`}>\n        <div\n          className=\"arrow__container arrow__container--with-link\"\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          {content.map(arrow => {\n            const arrowStyle = {\n              backgroundColor: arrow.backgroundColor\n                ? arrow.backgroundColor\n                : 'transparent',\n              color:\n                arrow.backgroundColor === colors['black']\n                  ? 'white'\n                  : colors['black'],\n            };\n\n            return (\n              <Link\n                key={arrow.text}\n                to={arrow.path}\n                className={`arrow__wrapper--stacked ${className}`}\n                {...props}\n              >\n                <Element flex className=\"arrow__rectangle\" style={arrowStyle}>\n                  <p className=\"arrow--stacked-title\"><span>{arrow.text}</span></p>\n                </Element>\n                <div className=\"arrow__point\" style={arrowStyle} />\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return render;\n};\n\nArrow.propTypes = {\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  link: PropTypes.string,\n  content: PropTypes.array.isRequired,\n  stack: PropTypes.bool,\n  upperCase: PropTypes.bool,\n  bold: PropTypes.bool,\n  thickBorder: PropTypes.bool,\n};\n\nArrow.defaultProps = {\n  className: '',\n  wrapperClassName: '',\n};\n\nexport default Arrow;\n","import React, { Component } from 'react';\n\nimport Arrow from '../components/Arrow/Arrow';\nimport Element from '../components/Element/Element';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport colors from '../colors';\nimport getTranslationPath from '../utils/getPartTranslationPath';\n\nclass NotFoundPage extends Component {\n  state = {\n    siteLanguage: 'fi',\n  };\n\n  componentDidMount() {\n    const siteLanguage =\n      window.location.pathname.indexOf('/en') > -1\n        ? 'en'\n        : window.location.pathname.indexOf('/zh') > -1\n        ? 'zh'\n        : window.location.pathname.indexOf('/fr') > -1\n        ? 'fr'\n        : 'fi';\n\n    this.setState({ siteLanguage });\n  }\n\n  render() {\n    const title =\n      this.state.siteLanguage === 'en' ? 'Page not found' \n      : this.state.siteLanguage === 'fr' ? 'Page non trouvée'\n      : 'Sivua ei löytynyt';\n\n    return (\n      <Layout>\n        <SEO\n          title={`${title} | Full stack open`}\n          lang={this.state.siteLanguage}\n        />\n\n        <Element className=\"container spacing--large spacing--after\">\n          <h1>404 - {title}</h1>\n\n          <p className=\"col-10 spacing--small spacing--after\">\n            Uncaught ReferenceError: unknown is not defined\n          </p>\n\n          <Arrow\n            className=\"col-10 arrow__container--with-link\"\n            bold\n            thickBorder\n            link={getTranslationPath(this.state.siteLanguage, '/')}\n            content={[\n              { backgroundColor: colors['main'], text: 'Go back home' },\n            ]}\n          />\n        </Element>\n      </Layout>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","const getPartTranslationPath = (language, part, path = '') => {\n  return language === 'fi' ? `/osa${part}${path}` : `/${language}/part${part}${path}`;\n};\n\nexport default getPartTranslationPath;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}